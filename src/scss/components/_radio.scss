@use "../exports/functions" as f;
@use "../exports/mixins" as mix;
@use "sass:math";

$checksize: 20px;

[data-radio] {
	position: relative;
	@include mix.adaptiveValue($checksize, $checksize * 0.8);
	overflow: hidden;
	cursor: pointer;

	[type="radio"] {
		position: absolute;
		width: 1px;
		height: 1px;
		opacity: 0;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		clip: rect(0 0 0 0);

		@include mix.focused {
			&:not(:disabled) {
				+ span {
					&::before {
						box-shadow: inset 0 0 f.em(5px, $checksize) #000;
					}
				}
			}
		}

		+ span {
			&:before {
				overflow: hidden;
				border-radius: 50%;
			}
		}

		&:checked {
			+ span {
				&:before {
					background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="256" fill="%23000000" fill-rule="evenodd"/></svg>')
						center center / contain no-repeat;
					// background: url('data:image/svg+xml;utf8,<svg width="1" height="1" viewBox="0 0 1 1" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.5 0.75C0.638071 0.75 0.75 0.638071 0.75 0.5C0.75 0.361929 0.638071 0.25 0.5 0.25C0.361929 0.25 0.25 0.361929 0.25 0.5C0.25 0.638071 0.361929 0.75 0.5 0.75Z" fill="%23000000" /></svg>')
					// 	center center / contain no-repeat;
				}
			}

			&:disabled {
				+ span {
					&:before {
						background-color: #c0c0c0;
						background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="256" fill="%23a7a7a7" fill-rule="evenodd"/></svg>');
						// background-image: url('data:image/svg+xml;utf8,<svg width="1" height="1" viewBox="0 0 1 1" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.5 0.75C0.638071 0.75 0.75 0.638071 0.75 0.5C0.75 0.361929 0.638071 0.25 0.5 0.25C0.361929 0.25 0.25 0.361929 0.25 0.5C0.25 0.638071 0.361929 0.75 0.5 0.75Z" fill="%23a7a7a7" /></svg>');
					}
				}
			}
		}

		&:disabled {
			+ span {
				&:before {
					background-color: #c0c0c0;
				}
			}
		}
	}

	span {
		position: relative;
		@include mix.iflexing(null, center);
		gap: f.em(10px, $checksize);

		&:before {
			content: "";
			align-self: flex-start;
			flex: 0 0 f.em($checksize, $checksize);
			width: f.em($checksize, $checksize);
			height: f.em($checksize, $checksize);
			border: 1px solid #a7a9ac;
		}
	}
}
